<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				minWidth="1" minHeight="1" backgroundAlpha="0"
				applicationComplete="applicationCompleteHandler(event)">
	<!--- 
	The WAMI recorder is not meant to be seen, except for when the security panel
	is in view.  There is, however, an interface for the times you want to run it
	in a debugger.
	-->
	<fx:Script>
		<![CDATA[			
			import edu.mit.csail.wami.utils.External;
			
			import mx.controls.Button;
			import mx.controls.Label;
			import mx.core.UIComponent;
			
			private function applicationCompleteHandler(event:Event):void {
				External.debug('WAMI Flash Version 1.0: ' + Security.sandboxType);
				Security.allowInsecureDomain("*");
				var params:WamiParams = new WamiParams(LoaderInfo(this.root.loaderInfo).parameters);
				
				var audio:WamiAudio = new WamiAudio(params);
				var settings:FlashSettings = new FlashSettings(stage);

				if (params.visible) 
				{
					showDebugInterface(params, audio);
				}
				
				External.call(params.loadedCallback);
			}
			
			private function showDebugInterface(params:WamiParams, audio:WamiAudio):void
			{
				this.horizontalScrollPolicy = "off";
				this.verticalScrollPolicy = "off";
				
				var label:Label = new Label();
				var interval:uint;
				
				var recordButton:Button = new Button();
				recordButton.label = "Record";
				addElement(recordButton);
				recordButton.addEventListener(MouseEvent.CLICK, function(evt:MouseEvent):void
				{
					audio.startRecording(params.testRecordUrl);
					label.setStyle("color", "#500000");
					interval = setInterval(function():void
					{
						label.text = "Activity: " + audio.getRecordingLevel();	
					}, 250);
				});
				
				var stopButton:Button = new Button();
				stopButton.label = "Stop";
				addElement(stopButton);
				stopButton.addEventListener(MouseEvent.CLICK, function(evt:MouseEvent):void
				{
					if (interval) clearInterval(interval);
					interval = 0;
					label.text = "";
					audio.stopRecording();
					audio.stopPlaying();
				});
				
				var playButton:Button = new Button();
				playButton.label = "Play";
				addElement(playButton);
				var uic:UIComponent = new UIComponent();
				var video:Video = new Video();
				uic.addChild(video);
				addChild(uic);
				playButton.addEventListener(MouseEvent.CLICK, function(evt:MouseEvent):void
				{
					function ns_onMetaData(item:Object):void {
						trace("metaData");
						// Resize video instance.
						video.width = item.width;
						video.height = item.height;
						// Center video instance on Stage.
						video.x = (stage.stageWidth - video.width) / 2;
						video.y = (stage.stageHeight - video.height) / 2;
					}
					
					function ns_onCuePoint(item:Object):void {
						trace("cuePoint");
						trace(item.name + "\t" + item.time);
					}

					audio.startPlaying(params.testPlayUrl);
					label.setStyle("color", "#000500");
					interval = setInterval(function():void
					{
						label.text = "Activity: " + audio.getPlayingLevel();	
					}, 250);
				});
				
				addChild(label);
			}
		]]>
	</fx:Script>
</mx:Application>
